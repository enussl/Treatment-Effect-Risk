geom_line(alpha = 0.6, linewidth = 0.5) +
geom_point(size = 1.5) +
theme_bw() +
scale_color_jama() +
theme(legend.position = "top",
text = element_text(size = 10)) +
labs(color = "", group = "", x = expression(max(rho) ~ and ~ min(sigma) ~ symbol('\254') ~ Var(delta) ~ given ~ X ~ symbol('\256') ~ min(rho) ~ and ~ max(sigma)),
y = expression(widehat(CVaR[alpha](delta))))
plot.kallus.sigma.shift
plot.kallus.sigma.shift = ggplot(data = data,
aes(x = var.delta.x.group, y = value, group = name, color = name)) +
geom_line(alpha = 0.6, linewidth = 0.5) +
geom_point(size = 1.5) +
theme_bw() +
scale_color_jama() +
theme(legend.position = "top",
text = element_text(size = 10)) +
labs(color = "", group = "", x = expression(max(rho) ~ and ~ min(sigma) ~ symbol('\254') ~ Var(delta) ~ given ~ X ~ symbol('\256') ~ min(rho) ~ and ~ max(sigma)),
y = expression(widehat(CVaR[alpha](delta)))) +
scale_x_continuous(breaks = seq(min(data$var.delta.x.group, max(data$var.delta.x.group), 1)))
plot.kallus.sigma.shift
plot.kallus.sigma.shift = ggplot(data = data,
aes(x = var.delta.x.group, y = value, group = name, color = name)) +
geom_line(alpha = 0.6, linewidth = 0.5) +
geom_point(size = 1.5) +
theme_bw() +
scale_color_jama() +
theme(legend.position = "top",
text = element_text(size = 10)) +
labs(color = "", group = "", x = expression(max(rho) ~ and ~ min(sigma) ~ symbol('\254') ~ Var(delta) ~ given ~ X ~ symbol('\256') ~ min(rho) ~ and ~ max(sigma)),
y = expression(widehat(CVaR[alpha](delta)))) +
scale_x_continuous(breaks = seq(min(as.numeric(data$var.delta.x.group), as.numeric(max(data$var.delta.x.group)), 1)))
plot.kallus.sigma.shift
plot.kallus.sigma.shift = ggplot(data = data,
aes(x = var.delta.x.group, y = value, group = name, color = name)) +
geom_line(alpha = 0.6, linewidth = 0.5) +
geom_point(size = 1.5) +
theme_bw() +
scale_color_jama() +
theme(legend.position = "top",
text = element_text(size = 10)) +
labs(color = "", group = "", x = expression(max(rho) ~ and ~ min(sigma) ~ symbol('\254') ~ Var(delta) ~ given ~ X ~ symbol('\256') ~ min(rho) ~ and ~ max(sigma)),
y = expression(widehat(CVaR[alpha](delta)))) +
scale_x_continuous(breaks = seq(min(as.numeric(data$var.delta.x.group), max(as.numeric(data$var.delta.x.group)), 1)))
plot.kallus.sigma.shift
plot.kallus.sigma.shift = ggplot(data = data,
aes(x = var.delta.x.group, y = value, group = name, color = name)) +
geom_line(alpha = 0.6, linewidth = 0.5) +
geom_point(size = 1.5) +
theme_bw() +
scale_color_jama() +
theme(legend.position = "top",
text = element_text(size = 10)) +
labs(color = "", group = "", x = expression(max(rho) ~ and ~ min(sigma) ~ symbol('\254') ~ Var(delta) ~ given ~ X ~ symbol('\256') ~ min(rho) ~ and ~ max(sigma)),
y = expression(widehat(CVaR[alpha](delta)))) +
scale_x_continuous(breaks = seq(min(as.numeric(data$var.delta.x.group), max(as.numeric(data$var.delta.x.group)), by = 10)))
plot.kallus.sigma.shift
plot.kallus.sigma.shift = ggplot(data = data,
aes(x = var.delta.x.group, y = value, group = name, color = name)) +
geom_line(alpha = 0.6, linewidth = 0.5) +
geom_point(size = 1.5) +
theme_bw() +
scale_color_jama() +
theme(legend.position = "top",
text = element_text(size = 10)) +
labs(color = "", group = "", x = expression(max(rho) ~ and ~ min(sigma) ~ symbol('\254') ~ Var(delta) ~ given ~ X ~ symbol('\256') ~ min(rho) ~ and ~ max(sigma)),
y = expression(widehat(CVaR[alpha](delta)))) +
scale_x_discrete(breaks = seq(min(as.numeric(data$var.delta.x.group), max(as.numeric(data$var.delta.x.group)), by = 10)))
plot.kallus.sigma.shift
plot.kallus.sigma.shift = ggplot(data = data,
aes(x = var.delta.x.group, y = value, group = name, color = name)) +
geom_line(alpha = 0.6, linewidth = 0.5) +
geom_point(size = 1.5) +
theme_bw() +
scale_color_jama() +
theme(legend.position = "top",
text = element_text(size = 10)) +
labs(color = "", group = "", x = expression(max(rho) ~ and ~ min(sigma) ~ symbol('\254') ~ Var(delta) ~ given ~ X ~ symbol('\256') ~ min(rho) ~ and ~ max(sigma)),
y = expression(widehat(CVaR[alpha](delta)))) +
scale_x_continuous(labels = scales::number_format(accuracy = 1))
plot.kallus.sigma.shift
plot.kallus.sigma.shift = ggplot(data = data,
aes(x = var.delta.x.group, y = value, group = name, color = name)) +
geom_line(alpha = 0.6, linewidth = 0.5) +
geom_point(size = 1.5) +
theme_bw() +
scale_color_jama() +
theme(legend.position = "top",
text = element_text(size = 10)) +
labs(color = "", group = "", x = expression(max(rho) ~ and ~ min(sigma) ~ symbol('\254') ~ Var(delta) ~ given ~ X ~ symbol('\256') ~ min(rho) ~ and ~ max(sigma)),
y = expression(widehat(CVaR[alpha](delta))))
plot.kallus.sigma.shift
simulate.full.data = function(shift, sigma.1, sigma.0,
n.obs, mu.1, mu.0, alpha){
# shift: upper limit of uniform r.v. (controls mean shifts)
# sigma.1: upper limit of std of Y_1
# sigma.0: upper limit of std of Y_0
# n.obs: number of observations
# mu.1: mean Y_1
# mu.0: mean Y_0
# alpha: alpha of CVaR
max.var = sigma.1^2+sigma.0^2+2*sigma.1*sigma.0
x = seq(1,500,1)
corr = seq(-1, 1, l = 20)
sd = list(seq(0, sigma.1, l = 20), seq(0, sigma.0, l = 20))
alpha = 0.05
results.sigma.shift = matrix(data = NA, nrow = length(sd[[1]])*length(corr), ncol = 7)
v = 1
for (c in corr){
for(k in 1:length(sd[[1]])){
tau.vec = numeric()
cdte.mat = matrix(data = NA, nrow = length(x), ncol = 3)
i = 1
for (j in 1:length(x)){
shift.1 = runif(n = 1, 0, shift)
shift.0 = runif(n = 1, 0, shift)
y.1 = rnorm(n = n.obs, mean = mu.1+shift.1, sd = sd[[1]][k])
y.0 = rnorm(n = n.obs, mean = mu.0+shift.0, sd = sd[[2]][k])
delta = rnorm(n = n.obs, mean = mu.1+shift.1-(mu.0+shift.0),
sd = sqrt(sd[[1]][k]^2+sd[[2]][k]^2-2*c*sd[[1]][k]*sd[[2]][k]))
tau.vec[j] = mean(y.1)-mean(y.0)
cdte.mat[i,1] = max(ES(y.1, p_loss = alpha)-ES(y.0, p_loss = alpha),
ES(y.0, p_loss = alpha)-ES(y.1, p_loss = alpha))
cdte.mat[i,2] = ES(delta, p_loss = alpha)
cdte.mat[i,3] = ES(y.1, p_loss = alpha) + ES(-1*y.0, p_loss = alpha)
i = i + 1
}
cvar.kall = ES(tau.vec, p_loss = alpha)
cvar.us = colMeans(cdte.mat)
results.sigma.shift[v,1] = cvar.us[1]
results.sigma.shift[v,2] = cvar.us[2]
results.sigma.shift[v,3] = cvar.us[3]
results.sigma.shift[v,4] = cvar.kall
results.sigma.shift[v,5] = c
results.sigma.shift[v,6] = sd[[1]][k]
results.sigma.shift[v,7] = sd[[2]][k]
v = v + 1
}
}
sigma.shift.df = data.frame(results.sigma.shift) %>%
rename("LB" = "X1",
"True" = "X2",
"UB" = "X3",
"Kallus" = "X4",
"Corr" = "X5",
"Se.1" = "X6",
"Se.0" = "X7") %>%
mutate(var.delta.x = Se.1^2+Se.0^2-2*Corr*Se.1*Se.0,
var.delta.x.group = cut(var.delta.x, breaks = 60,
include.lowest = T),
var.delta.x.group = round(as.numeric(var.delta.x.group-1)*max.var/60, 2),
var.delta.x.group = factor(var.delta.x.group)) %>%
group_by(var.delta.x.group) %>%
summarise(LB = mean(LB),
True = mean(True),
UB = mean(UB),
Kallus = mean(Kallus)) %>%
pivot_longer(cols = c("LB", "True", "UB", "Kallus")) %>%
arrange(name, value)
return(sigma.shift.df)
}
data = simulate.full.data(shift = 2, sigma.1 = 2, sigma.0 = 2, n.obs = 50, mu.1 = 1, mu.0 = 1, alpha = 0.05)
simulate.full.data = function(shift, sigma.1, sigma.0,
n.obs, mu.1, mu.0, alpha){
# shift: upper limit of uniform r.v. (controls mean shifts)
# sigma.1: upper limit of std of Y_1
# sigma.0: upper limit of std of Y_0
# n.obs: number of observations
# mu.1: mean Y_1
# mu.0: mean Y_0
# alpha: alpha of CVaR
max.var = sigma.1^2+sigma.0^2+2*sigma.1*sigma.0
x = seq(1,500,1)
corr = seq(-1, 1, l = 20)
sd = list(seq(0, sigma.1, l = 20), seq(0, sigma.0, l = 20))
alpha = 0.05
results.sigma.shift = matrix(data = NA, nrow = length(sd[[1]])*length(corr), ncol = 7)
v = 1
for (c in corr){
for(k in 1:length(sd[[1]])){
tau.vec = numeric()
cdte.mat = matrix(data = NA, nrow = length(x), ncol = 3)
i = 1
for (j in 1:length(x)){
shift.1 = runif(n = 1, 0, shift)
shift.0 = runif(n = 1, 0, shift)
y.1 = rnorm(n = n.obs, mean = mu.1+shift.1, sd = sd[[1]][k])
y.0 = rnorm(n = n.obs, mean = mu.0+shift.0, sd = sd[[2]][k])
delta = rnorm(n = n.obs, mean = mu.1+shift.1-(mu.0+shift.0),
sd = sqrt(sd[[1]][k]^2+sd[[2]][k]^2-2*c*sd[[1]][k]*sd[[2]][k]))
tau.vec[j] = mean(y.1)-mean(y.0)
cdte.mat[i,1] = max(ES(y.1, p_loss = alpha)-ES(y.0, p_loss = alpha),
ES(y.0, p_loss = alpha)-ES(y.1, p_loss = alpha))
cdte.mat[i,2] = ES(delta, p_loss = alpha)
cdte.mat[i,3] = ES(y.1, p_loss = alpha) + ES(-1*y.0, p_loss = alpha)
i = i + 1
}
cvar.kall = ES(tau.vec, p_loss = alpha)
cvar.us = colMeans(cdte.mat)
results.sigma.shift[v,1] = cvar.us[1]
results.sigma.shift[v,2] = cvar.us[2]
results.sigma.shift[v,3] = cvar.us[3]
results.sigma.shift[v,4] = cvar.kall
results.sigma.shift[v,5] = c
results.sigma.shift[v,6] = sd[[1]][k]
results.sigma.shift[v,7] = sd[[2]][k]
v = v + 1
}
}
sigma.shift.df = data.frame(results.sigma.shift) %>%
rename("LB" = "X1",
"True" = "X2",
"UB" = "X3",
"Kallus" = "X4",
"Corr" = "X5",
"Se.1" = "X6",
"Se.0" = "X7") %>%
mutate(var.delta.x = Se.1^2+Se.0^2-2*Corr*Se.1*Se.0,
var.delta.x.group = cut(var.delta.x, breaks = 60,
include.lowest = T),
var.delta.x.group = round((as.numeric(var.delta.x.group)-1)*max.var/60, 2),
var.delta.x.group = factor(var.delta.x.group)) %>%
group_by(var.delta.x.group) %>%
summarise(LB = mean(LB),
True = mean(True),
UB = mean(UB),
Kallus = mean(Kallus)) %>%
pivot_longer(cols = c("LB", "True", "UB", "Kallus")) %>%
arrange(name, value)
return(sigma.shift.df)
}
data = simulate.full.data(shift = 2, sigma.1 = 2, sigma.0 = 2, n.obs = 50, mu.1 = 1, mu.0 = 1, alpha = 0.05)
View(data)
plot.kallus.sigma.shift = ggplot(data = data,
aes(x = var.delta.x.group, y = value, group = name, color = name)) +
geom_line(alpha = 0.6, linewidth = 0.5) +
geom_point(size = 1.5) +
theme_bw() +
scale_color_jama() +
theme(legend.position = "top",
text = element_text(size = 10)) +
labs(color = "", group = "", x = expression(max(rho) ~ and ~ min(sigma) ~ symbol('\254') ~ Var(delta) ~ given ~ X ~ symbol('\256') ~ min(rho) ~ and ~ max(sigma)),
y = expression(widehat(CVaR[alpha](delta))))
plot.kallus.sigma.shift
simulate.full.data = function(shift, sigma.1, sigma.0,
n.obs, mu.1, mu.0, alpha){
# shift: upper limit of uniform r.v. (controls mean shifts)
# sigma.1: upper limit of std of Y_1
# sigma.0: upper limit of std of Y_0
# n.obs: number of observations
# mu.1: mean Y_1
# mu.0: mean Y_0
# alpha: alpha of CVaR
max.var = sigma.1^2+sigma.0^2+2*sigma.1*sigma.0
x = seq(1,500,1)
corr = seq(-1, 1, l = 20)
sd = list(seq(0, sigma.1, l = 20), seq(0, sigma.0, l = 20))
alpha = 0.05
results.sigma.shift = matrix(data = NA, nrow = length(sd[[1]])*length(corr), ncol = 7)
v = 1
for (c in corr){
for(k in 1:length(sd[[1]])){
tau.vec = numeric()
cdte.mat = matrix(data = NA, nrow = length(x), ncol = 3)
i = 1
for (j in 1:length(x)){
shift.1 = runif(n = 1, 0, shift)
shift.0 = runif(n = 1, 0, shift)
y.1 = rnorm(n = n.obs, mean = mu.1+shift.1, sd = sd[[1]][k])
y.0 = rnorm(n = n.obs, mean = mu.0+shift.0, sd = sd[[2]][k])
delta = rnorm(n = n.obs, mean = mu.1+shift.1-(mu.0+shift.0),
sd = sqrt(sd[[1]][k]^2+sd[[2]][k]^2-2*c*sd[[1]][k]*sd[[2]][k]))
tau.vec[j] = mean(y.1)-mean(y.0)
cdte.mat[i,1] = max(ES(y.1, p_loss = alpha)-ES(y.0, p_loss = alpha),
ES(y.0, p_loss = alpha)-ES(y.1, p_loss = alpha))
cdte.mat[i,2] = ES(delta, p_loss = alpha)
cdte.mat[i,3] = ES(y.1, p_loss = alpha) + ES(-1*y.0, p_loss = alpha)
i = i + 1
}
cvar.kall = ES(tau.vec, p_loss = alpha)
cvar.us = colMeans(cdte.mat)
results.sigma.shift[v,1] = cvar.us[1]
results.sigma.shift[v,2] = cvar.us[2]
results.sigma.shift[v,3] = cvar.us[3]
results.sigma.shift[v,4] = cvar.kall
results.sigma.shift[v,5] = c
results.sigma.shift[v,6] = sd[[1]][k]
results.sigma.shift[v,7] = sd[[2]][k]
v = v + 1
}
}
sigma.shift.df = data.frame(results.sigma.shift) %>%
rename("LB" = "X1",
"True" = "X2",
"UB" = "X3",
"Kallus" = "X4",
"Corr" = "X5",
"Se.1" = "X6",
"Se.0" = "X7") %>%
mutate(var.delta.x = Se.1^2+Se.0^2-2*Corr*Se.1*Se.0,
var.delta.x.group = cut(var.delta.x, breaks = 30,
include.lowest = T),
var.delta.x.group = round((as.numeric(var.delta.x.group)-1)*max.var/30, 2),
var.delta.x.group = factor(var.delta.x.group)) %>%
group_by(var.delta.x.group) %>%
summarise(LB = mean(LB),
True = mean(True),
UB = mean(UB),
Kallus = mean(Kallus)) %>%
pivot_longer(cols = c("LB", "True", "UB", "Kallus")) %>%
arrange(name, value)
return(sigma.shift.df)
}
data = simulate.full.data(shift = 2, sigma.1 = 2, sigma.0 = 2, n.obs = 1000, mu.1 = 1, mu.0 = 1, alpha = 0.05)
plot.kallus.sigma.shift = ggplot(data = data,
aes(x = var.delta.x.group, y = value, group = name, color = name)) +
geom_line(alpha = 0.6, linewidth = 0.5) +
geom_point(size = 1.5) +
theme_bw() +
scale_color_jama() +
theme(legend.position = "top",
text = element_text(size = 12)) +
labs(color = "", group = "", x = expression(max(rho) ~ and ~ min(sigma) ~ symbol('\254') ~ Var(delta) ~ given ~ X ~ symbol('\256') ~ min(rho) ~ and ~ max(sigma)),
y = expression(widehat(CVaR[alpha](delta))))
plot.kallus.sigma.shift
View(data)
simulate.full.data = function(shift, sigma.1, sigma.0,
n.obs, mu.1, mu.0, alpha){
# shift: upper limit of uniform r.v. (controls mean shifts)
# sigma.1: upper limit of std of Y_1
# sigma.0: upper limit of std of Y_0
# n.obs: number of observations
# mu.1: mean Y_1
# mu.0: mean Y_0
# alpha: alpha of CVaR
max.var = sigma.1^2+sigma.0^2+2*sigma.1*sigma.0
x = seq(1,500,1)
corr = seq(-1, 1, l = 20)
sd = list(seq(0, sigma.1, l = 20), seq(0, sigma.0, l = 20))
alpha = 0.05
results.sigma.shift = matrix(data = NA, nrow = length(sd[[1]])*length(corr), ncol = 7)
v = 1
for (c in corr){
for(k in 1:length(sd[[1]])){
tau.vec = numeric()
cdte.mat = matrix(data = NA, nrow = length(x), ncol = 3)
i = 1
for (j in 1:length(x)){
shift.1 = runif(n = 1, 0, shift)
shift.0 = runif(n = 1, 0, shift)
y.1 = rnorm(n = n.obs, mean = mu.1+shift.1, sd = sd[[1]][k])
y.0 = rnorm(n = n.obs, mean = mu.0+shift.0, sd = sd[[2]][k])
delta = rnorm(n = n.obs, mean = mu.1+shift.1-(mu.0+shift.0),
sd = sqrt(sd[[1]][k]^2+sd[[2]][k]^2-2*c*sd[[1]][k]*sd[[2]][k]))
tau.vec[j] = mean(y.1)-mean(y.0)
cdte.mat[i,1] = max(ES(y.1, p_loss = alpha)-ES(y.0, p_loss = alpha),
ES(y.0, p_loss = alpha)-ES(y.1, p_loss = alpha))
cdte.mat[i,2] = ES(delta, p_loss = alpha)
cdte.mat[i,3] = ES(y.1, p_loss = alpha) + ES(-1*y.0, p_loss = alpha)
i = i + 1
}
cvar.kall = ES(tau.vec, p_loss = alpha)
cvar.us = colMeans(cdte.mat)
results.sigma.shift[v,1] = cvar.us[1]
results.sigma.shift[v,2] = cvar.us[2]
results.sigma.shift[v,3] = cvar.us[3]
results.sigma.shift[v,4] = cvar.kall
results.sigma.shift[v,5] = c
results.sigma.shift[v,6] = sd[[1]][k]
results.sigma.shift[v,7] = sd[[2]][k]
v = v + 1
}
}
sigma.shift.df = data.frame(results.sigma.shift) %>%
rename("LB" = "X1",
"True" = "X2",
"UB" = "X3",
"Kallus" = "X4",
"Corr" = "X5",
"Se.1" = "X6",
"Se.0" = "X7") %>%
mutate(var.delta.x = Se.1^2+Se.0^2-2*Corr*Se.1*Se.0,
var.delta.x.group = cut(var.delta.x, breaks = 30,
include.lowest = T),
var.delta.x.group = round((as.numeric(var.delta.x.group)-1)*max.var/30, 1),
var.delta.x.group = factor(var.delta.x.group)) %>%
group_by(var.delta.x.group) %>%
summarise(LB = mean(LB),
True = mean(True),
UB = mean(UB),
Kallus = mean(Kallus)) %>%
pivot_longer(cols = c("LB", "True", "UB", "Kallus")) %>%
arrange(name, value)
return(sigma.shift.df)
}
data = simulate.full.data(shift = 2, sigma.1 = 2, sigma.0 = 2, n.obs = 1000, mu.1 = 1, mu.0 = 1, alpha = 0.05)
View(data)
plot.results = function(df){
# df: data set of results
plot = ggplot(data = df, aes(x = var.delta.x.group, y = value, group = name, color = name)) +
geom_line(alpha = 0.6, linewidth = 0.5) +
geom_point(size = 1.5) +
theme_bw() +
scale_color_jama() +
theme(legend.position = "top",
text = element_text(size = 12)) +
labs(color = "", group = "", x = expression(max(rho) ~ and ~ min(sigma) ~ symbol('\254') ~ Var(delta) ~ given ~ X ~ symbol('\256') ~ min(rho) ~ and ~ max(sigma)),
y = expression(widehat(CVaR[alpha](delta)))) +
scale_x_continuous(breaks = seq(min(data$var.delta.x.group, max(data$var.delta.x.group), 1)))
return(plot)
}
(plot = plot.results(data))
plot = ggplot(data = df, aes(x = var.delta.x.group, y = value, group = name, color = name)) +
geom_line(alpha = 0.6, linewidth = 0.5) +
geom_point(size = 1.5) +
theme_bw() +
scale_color_jama() +
theme(legend.position = "top",
text = element_text(size = 12)) +
labs(color = "", group = "", x = expression(max(rho) ~ and ~ min(sigma) ~ symbol('\254') ~ Var(delta) ~ given ~ X ~ symbol('\256') ~ min(rho) ~ and ~ max(sigma)),
y = expression(widehat(CVaR[alpha](delta))))
plot.results = function(df){
# df: data set of results
plot = ggplot(data = df, aes(x = var.delta.x.group, y = value, group = name, color = name)) +
geom_line(alpha = 0.6, linewidth = 0.5) +
geom_point(size = 1.5) +
theme_bw() +
scale_color_jama() +
theme(legend.position = "top",
text = element_text(size = 12)) +
labs(color = "", group = "", x = expression(max(rho) ~ and ~ min(sigma) ~ symbol('\254') ~ Var(delta) ~ given ~ X ~ symbol('\256') ~ min(rho) ~ and ~ max(sigma)),
y = expression(widehat(CVaR[alpha](delta))))
return(plot)
}
(plot = plot.results(data))
data = simulate.full.data(shift = 4, sigma.1 = 2, sigma.0 = 2, n.obs = 1000, mu.1 = 1, mu.0 = 1, alpha = 0.05)
(plot = plot.results(data))
simulate.full.data = function(shift, sigma.1, sigma.0,
n.obs, mu.1, mu.0, alpha){
# shift: upper limit of uniform r.v. (controls mean shifts)
# sigma.1: upper limit of std of Y_1
# sigma.0: upper limit of std of Y_0
# n.obs: number of observations
# mu.1: mean Y_1
# mu.0: mean Y_0
# alpha: alpha of CVaR
max.var = sigma.1^2+sigma.0^2+2*sigma.1*sigma.0
x = seq(1,1000,1)
corr = seq(-1, 1, l = 20)
sd = list(seq(0, sigma.1, l = 20), seq(0, sigma.0, l = 20))
alpha = 0.05
results.sigma.shift = matrix(data = NA, nrow = length(sd[[1]])*length(corr), ncol = 7)
v = 1
for (c in corr){
for(k in 1:length(sd[[1]])){
tau.vec = numeric()
cdte.mat = matrix(data = NA, nrow = length(x), ncol = 3)
i = 1
for (j in 1:length(x)){
shift.1 = runif(n = 1, 0, shift)
shift.0 = runif(n = 1, 0, shift)
y.1 = rnorm(n = n.obs, mean = mu.1+shift.1, sd = sd[[1]][k])
y.0 = rnorm(n = n.obs, mean = mu.0+shift.0, sd = sd[[2]][k])
delta = rnorm(n = n.obs, mean = mu.1+shift.1-(mu.0+shift.0),
sd = sqrt(sd[[1]][k]^2+sd[[2]][k]^2-2*c*sd[[1]][k]*sd[[2]][k]))
tau.vec[j] = mean(y.1)-mean(y.0)
cdte.mat[i,1] = max(ES(y.1, p_loss = alpha)-ES(y.0, p_loss = alpha),
ES(y.0, p_loss = alpha)-ES(y.1, p_loss = alpha))
cdte.mat[i,2] = ES(delta, p_loss = alpha)
cdte.mat[i,3] = ES(y.1, p_loss = alpha) + ES(-1*y.0, p_loss = alpha)
i = i + 1
}
cvar.kall = ES(tau.vec, p_loss = alpha)
cvar.us = colMeans(cdte.mat)
results.sigma.shift[v,1] = cvar.us[1]
results.sigma.shift[v,2] = cvar.us[2]
results.sigma.shift[v,3] = cvar.us[3]
results.sigma.shift[v,4] = cvar.kall
results.sigma.shift[v,5] = c
results.sigma.shift[v,6] = sd[[1]][k]
results.sigma.shift[v,7] = sd[[2]][k]
v = v + 1
}
}
sigma.shift.df = data.frame(results.sigma.shift) %>%
rename("LB" = "X1",
"True" = "X2",
"UB" = "X3",
"Kallus" = "X4",
"Corr" = "X5",
"Se.1" = "X6",
"Se.0" = "X7") %>%
mutate(var.delta.x = Se.1^2+Se.0^2-2*Corr*Se.1*Se.0,
var.delta.x.group = cut(var.delta.x, breaks = 30,
include.lowest = T),
var.delta.x.group = round((as.numeric(var.delta.x.group)-1)*max.var/30, 1),
var.delta.x.group = factor(var.delta.x.group)) %>%
group_by(var.delta.x.group) %>%
summarise(LB = mean(LB),
True = mean(True),
UB = mean(UB),
Kallus = mean(Kallus)) %>%
pivot_longer(cols = c("LB", "True", "UB", "Kallus")) %>%
arrange(name, value)
return(sigma.shift.df)
}
data = simulate.full.data(shift = 4, sigma.1 = 2, sigma.0 = 2, n.obs = 1000, mu.1 = 1, mu.0 = 1, alpha = 0.05)
(plot = plot.results(data))
data = simulate.full.data(shift = 0.5, sigma.1 = 2, sigma.0 = 2, n.obs = 1000, mu.1 = 1, mu.0 = 1, alpha = 0.05)
(plot = plot.results(data))
data = simulate.full.data(shift = 0.1, sigma.1 = 2, sigma.0 = 2, n.obs = 1000, mu.1 = 1, mu.0 = 1, alpha = 0.05)
(plot = plot.results(data))
